class Solution {
    public void merge(int[] nums1, int n, int[] nums2, int m) {
        // Start filling the nums1 array from the end
        int i = n - 1; // Last index of nums1's initial elements
        int j = m - 1; // Last index of nums2
        int k = n + m - 1; // Last index of nums1 (combined array size)
        
        // Merge nums1 and nums2 in reverse order to avoid overwriting
        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }

        // If there are remaining elements in nums2
        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
        // No need to handle remaining elements of nums1 as they are already in place
    }
}
